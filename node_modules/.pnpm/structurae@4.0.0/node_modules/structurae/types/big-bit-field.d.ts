import type { BitFieldConstructor } from "./bit-field-types.js";
/**
 * Creates a BigBitField class with a given schema. BigBitField uses bigints as bitfields
 * to store and operate on data using bitwise operations.
 *
 * @param schema the schema
 * @returns the BigBitFieldClass
 *
 * @example
 * const LargeField = BitFieldMixin({ width: 20, height: 20 });
 * const largeField = new LargeField({ width: 1048576, height: 1048576 });
 * largeField.value
 * //=> 1099512676352n
 * largeField.set('width', 1000).get('width')
 * //=> 1000
 * largeField.toObject()
 * //=> { width: 1000, height: 1048576 }
 */
export declare function BigBitFieldMixin<T extends Record<K, number>, K extends keyof T>(schema: T): BitFieldConstructor<K, bigint>;
