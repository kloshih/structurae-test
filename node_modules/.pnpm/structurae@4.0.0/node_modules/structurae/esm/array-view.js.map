{"version":3,"file":"array-view.js","sourceRoot":"","sources":["../src/array-view.ts"],"names":[],"mappings":"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","sourcesContent":["import { log2 } from \"./utilities.js\";\nimport type {\n  ComplexView,\n  ContainerView,\n  PrimitiveView,\n  ViewConstructor,\n  ViewInstance,\n  ViewSchema,\n} from \"./view-types.js\";\nimport type { View } from \"./view.js\";\n\nexport class ArrayView<T> extends DataView implements ContainerView<T> {\n  static View: ViewConstructor<\n    unknown,\n    PrimitiveView<unknown> | ContainerView<unknown> | ComplexView<unknown>\n  >;\n  static viewLength = 0;\n  static itemLength: number;\n\n  get size() {\n    return (this.constructor as typeof ArrayView).getSize(this.byteLength);\n  }\n\n  static decode<T>(\n    view: DataView,\n    start = 0,\n    length = view.byteLength,\n  ): Array<T> {\n    const { View, itemLength } = this;\n    const size = this.getSize(length);\n    const array = new Array(size);\n    for (let i = 0; i < size; i++) {\n      const offset = this.getOffset(i);\n      array[i] = View.decode(view, start + offset, itemLength);\n    }\n    return array;\n  }\n\n  static encode<T>(\n    value: Array<T>,\n    view: DataView,\n    start = 0,\n    length = view.byteLength,\n  ): number {\n    const { View, itemLength } = this;\n    const size = this.getSize(length);\n    const max = size < value.length ? size : value.length;\n    for (let i = 0; i < max; i++) {\n      const offset = this.getOffset(i);\n      View.encode(value[i], view, start + offset, itemLength);\n    }\n    const written = max * itemLength;\n    // zero-out remaining bytes\n    let caret = written;\n    while (caret < length) view.setUint8(start + caret++, 0);\n    return written;\n  }\n\n  static from<T, U extends ArrayView<T>>(value: Array<T>): U {\n    const view = new this<T>(new ArrayBuffer(this.getOffset(value.length)));\n    this.encode<T>(value, view, 0, view.byteLength);\n    return view as U;\n  }\n\n  static getLength(size: number): number {\n    return this.getOffset(size);\n  }\n\n  static getOffset(index: number): number {\n    return (index * this.itemLength) | 0;\n  }\n\n  static getSize(length: number): number {\n    return (length / this.itemLength) | 0;\n  }\n\n  static indexOf<T>(\n    value: T,\n    view: DataView,\n    startIndex = 0,\n    startOffset = 0,\n    length = view.byteLength,\n  ): number {\n    const size = this.getSize(length);\n    const valueView = this.View.from(value);\n    outer:\n    for (let i = startIndex; i < size; i++) {\n      const offset = startOffset + this.getOffset(i);\n      for (let j = 0; j < valueView.byteLength; j++) {\n        if (valueView.getUint8(j) !== view.getUint8(offset + j)) continue outer;\n      }\n      return i;\n    }\n    return -1;\n  }\n\n  *[Symbol.iterator](): Generator<ViewInstance<T>> {\n    const { size } = this;\n    for (let i = 0; i < size; i++) {\n      yield this.getView(i);\n    }\n  }\n\n  at(index: number): T {\n    if (index < 0) return this.get(this.size + index);\n    return this.get(index);\n  }\n\n  get(index: number): T {\n    const constructor = this.constructor as typeof ArrayView;\n    const View = constructor.View as ViewConstructor<T>;\n    return View.decode(this, constructor.getOffset(index));\n  }\n\n  getLength(_: number): number {\n    return (this.constructor as typeof ArrayView).itemLength;\n  }\n\n  getView(index: number): ViewInstance<T> {\n    const constructor = this.constructor as typeof ArrayView;\n    const View = constructor.View as ViewConstructor<T>;\n    return new View(\n      this.buffer,\n      this.byteOffset + constructor.getOffset(index),\n      constructor.itemLength,\n    );\n  }\n\n  indexOf(value: T, start = 0): number {\n    return (this.constructor as typeof ArrayView).indexOf(\n      value,\n      this,\n      start,\n      0,\n      this.byteLength,\n    );\n  }\n\n  set(index: number, value: T): void {\n    const constructor = this.constructor as typeof ArrayView;\n    const View = constructor.View as ViewConstructor<T>;\n    View.encode(\n      value,\n      this,\n      this.byteOffset + constructor.getOffset(index),\n      constructor.itemLength,\n    );\n  }\n\n  setView(index: number, value: DataView): void {\n    const constructor = this.constructor as typeof ArrayView;\n    new Uint8Array(\n      this.buffer,\n      this.byteOffset + constructor.getOffset(index),\n      constructor.itemLength,\n    ).set(new Uint8Array(value.buffer, value.byteOffset, value.byteLength));\n  }\n\n  toJSON(): Array<T> {\n    return (this.constructor as typeof ArrayView).decode<T>(\n      this,\n      0,\n      this.byteLength,\n    );\n  }\n\n  static initialize<T>(\n    schema: ViewSchema<T>,\n    Factory: View,\n    SchemaView?: ViewConstructor<T>,\n    length?: number,\n  ): ViewConstructor<Array<T>> {\n    const ItemView = SchemaView ?? Factory.getExistingView(schema);\n    const itemLength = length ?? ItemView.viewLength;\n    if (itemLength === undefined || itemLength <= 0 || itemLength >= Infinity) {\n      throw TypeError(\"ArrayView should have fixed sized items.\");\n    }\n    return class extends this<T> {\n      static View = ItemView;\n      static itemLength = itemLength;\n      static offset = log2[itemLength];\n    };\n  }\n}\n"]}