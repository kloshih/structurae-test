{"version":3,"file":"dict-view.js","sourceRoot":"","sources":["../src/dict-view.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  ComplexView,\n  ViewConstructor,\n  ViewInstance,\n  ViewSchema,\n} from \"./view-types.js\";\nimport type { View } from \"./view.js\";\nimport type { ArrayView } from \"./array-view.js\";\nimport type { VectorView } from \"./vector-view.js\";\n\n// deno-lint-ignore ban-types\nexport class DictView<T extends object> extends DataView\n  implements ComplexView<T> {\n  static viewLength = 0;\n  static maxView: DataView;\n  static KeysView: typeof ArrayView;\n  static ValuesView: typeof VectorView;\n\n  static decode<T>(view: DataView, start = 0): T {\n    const { KeysView, ValuesView } = this;\n    const keyLength = KeysView.itemLength!;\n    const size = ValuesView.getSize(view, start);\n    const keysOffset = view.getUint32(start + ((1 + size) << 2), true);\n    const result = {} as T;\n    for (let i = 0; i < size; i++) {\n      const key = (KeysView.View as ViewConstructor<keyof T>).decode(\n        view,\n        start + keysOffset + i * keyLength,\n        keyLength,\n      );\n      const valueOffset = ValuesView.getOffset(i, view, start);\n      const value = !valueOffset\n        ? undefined\n        : (ValuesView.View as ViewConstructor<T[keyof T]>).decode(\n          view,\n          start + valueOffset[0],\n          valueOffset[1],\n        );\n      result[key] = value!;\n    }\n    return result;\n  }\n\n  static encode<T>(\n    value: T,\n    view: DataView,\n    start = 0,\n    length?: number,\n  ): number {\n    const { KeysView, ValuesView } = this;\n    const keys = Object.keys(value);\n    const requiredLength = keys.length * KeysView.itemLength!;\n    const maxLength = length ? length - requiredLength : undefined;\n    let written = ValuesView.encode(\n      Object.values(value),\n      view,\n      start,\n      maxLength,\n    );\n    written += KeysView.encode(\n      keys,\n      view,\n      start + written,\n      requiredLength,\n    );\n    return written;\n  }\n\n  // deno-lint-ignore ban-types\n  static from<T extends object, U extends DictView<T>>(value: T): U {\n    const end = this.encode<T>(value, this.maxView, 0, undefined);\n    return new this<T>(this.maxView.buffer.slice(0, end)) as U;\n  }\n\n  static getLength<T>(value: T): number {\n    const { KeysView, ValuesView } = this;\n    const keyLength = KeysView.itemLength!;\n    // required length\n    let length = 4 + Object.keys(value).length * keyLength;\n    length += ValuesView.getLength(Object.values(value));\n    return length;\n  }\n\n  get<P extends keyof T>(key: P): T[P] | undefined {\n    const offset = this.getOffset(key);\n    return offset\n      ? ((this.constructor as typeof DictView).ValuesView\n        .View as ViewConstructor<T[P]>).decode(\n          this,\n          offset[0],\n          offset[1],\n        )\n      : undefined;\n  }\n\n  getLength<P extends keyof T>(key: P): number {\n    const offset = this.getOffset(key);\n    return offset ? offset[1] : 0;\n  }\n\n  getOffset<P extends keyof T>(key: P): [number, number] | undefined {\n    const index = this.indexOf(key);\n    if (!~index) return undefined;\n    return (this.constructor as typeof DictView).ValuesView.getOffset(\n      index,\n      this,\n      0,\n    );\n  }\n\n  getView<P extends keyof T>(key: P): ViewInstance<T[P]> | undefined {\n    const offset = this.getOffset(key);\n    return offset\n      ? new ((this.constructor as typeof DictView).ValuesView\n        .View as ViewConstructor<T[P]>)(\n        this.buffer,\n        this.byteOffset + offset[0],\n        offset[1],\n      )\n      : undefined;\n  }\n\n  indexOf<P extends keyof T>(key: P): number {\n    const { KeysView } = this.constructor as typeof DictView;\n    const amount = this.getUint32(0, true);\n    const keysOffset = this.getUint32((1 + amount) << 2, true);\n    return KeysView.indexOf(\n      key,\n      this,\n      0,\n      keysOffset,\n      amount * KeysView.itemLength,\n    );\n  }\n\n  set<P extends keyof T>(key: P, value: T[P]) {\n    const offset = this.getOffset(key);\n    if (!offset) return undefined;\n    ((this.constructor as typeof DictView).ValuesView\n      .View as ViewConstructor<T[P]>).encode(\n        value,\n        this,\n        this.byteOffset + offset[0],\n        offset[1],\n      );\n    return;\n  }\n\n  setView<P extends keyof T>(key: P, value: DataView) {\n    const offset = this.getOffset(key);\n    if (!offset) return undefined;\n    new Uint8Array(this.buffer, this.byteOffset + offset[0], offset[1]).set(\n      new Uint8Array(value.buffer, value.byteOffset, value.byteLength),\n    );\n    return;\n  }\n\n  toJSON(): T {\n    return (this.constructor as typeof DictView).decode<T>(this);\n  }\n\n  // deno-lint-ignore ban-types\n  static initialize<T extends object>(\n    schema: ViewSchema<T>,\n    Factory: View,\n  ): ViewConstructor<T, ComplexView<T>> {\n    const keySchema = schema.propertyNames!;\n    const valueSchema = schema.additionalProperties!;\n    const KeysView = Factory.getArrayView(\n      keySchema as ViewSchema<number>,\n      undefined,\n      keySchema.maxLength,\n    ) as typeof ArrayView;\n    const ValuesView = Factory.Views.get(\"vector\")!.initialize(\n      valueSchema,\n      Factory,\n      valueSchema.type === \"array\"\n        ? Factory.getArray(valueSchema)[0]\n        : undefined,\n    ) as typeof VectorView;\n    return class extends this<T> {\n      static maxView = Factory.maxView;\n      static KeysView = KeysView;\n      static ValuesView = ValuesView;\n    };\n  }\n}\n"]}