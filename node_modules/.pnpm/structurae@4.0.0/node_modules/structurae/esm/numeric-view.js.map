{"version":3,"file":"numeric-view.js","sourceRoot":"","sources":["../src/numeric-view.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PrimitiveView, ViewConstructor } from \"./view-types.js\";\n\nexport class Uint8View extends DataView implements PrimitiveView<number> {\n  static viewLength = 1;\n\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getUint8.call(view, start);\n  }\n\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setUint8.call(view, start, value);\n    return this.viewLength;\n  }\n\n  static from(value: number) {\n    const typeView = new this(new ArrayBuffer(this.viewLength));\n    this.encode(value, typeView, 0);\n    return typeView;\n  }\n\n  static getLength(): number {\n    return this.viewLength;\n  }\n\n  get(): number {\n    return (this.constructor as typeof Uint8View).decode(this);\n  }\n\n  set(value: number): this {\n    (this.constructor as typeof Uint8View).encode(value, this);\n    return this;\n  }\n\n  toJSON(): number {\n    return (this.constructor as typeof Uint8View).decode(this);\n  }\n\n  static initialize(): ViewConstructor<number, PrimitiveView<number>> {\n    return this;\n  }\n}\n\nexport class Int8View extends Uint8View {\n  static viewLength = 1;\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getInt8.call(view, start);\n  }\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setInt8.call(view, start, value);\n    return this.viewLength;\n  }\n}\n\nexport class Int16View extends Uint8View {\n  static viewLength = 2;\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getInt16.call(view, start, true);\n  }\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setInt16.call(view, start, value, true);\n    return this.viewLength;\n  }\n}\n\nexport class Uint16View extends Uint8View {\n  static viewLength = 2;\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getUint16.call(view, start, true);\n  }\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setUint16.call(view, start, value, true);\n    return this.viewLength;\n  }\n}\n\nexport class Int32View extends Uint8View {\n  static viewLength = 4;\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getInt32.call(view, start, true);\n  }\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setInt32.call(view, start, value, true);\n    return this.viewLength;\n  }\n}\n\nexport class Uint32View extends Uint8View {\n  static viewLength = 4;\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getUint32.call(view, start, true);\n  }\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setUint32.call(view, start, value, true);\n    return this.viewLength;\n  }\n}\n\nexport class Float32View extends Uint8View {\n  static viewLength = 4;\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getFloat32.call(view, start, true);\n  }\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setFloat32.call(view, start, value, true);\n    return this.viewLength;\n  }\n}\n\nexport class Float64View extends Uint8View {\n  static viewLength = 8;\n  static decode(view: DataView, start = 0): number {\n    return DataView.prototype.getFloat64.call(view, start, true);\n  }\n  static encode(value: number, view: DataView, start = 0): number {\n    DataView.prototype.setFloat64.call(view, start, value, true);\n    return this.viewLength;\n  }\n}\n\nexport class BigInt64View extends DataView implements PrimitiveView<bigint> {\n  static viewLength = 8;\n\n  static decode(view: DataView, start = 0): bigint {\n    return DataView.prototype.getBigInt64.call(view, start, true);\n  }\n\n  static encode(value: bigint, view: DataView, start = 0): number {\n    DataView.prototype.setBigInt64.call(view, start, value, true);\n    return this.viewLength;\n  }\n\n  static from(value: bigint) {\n    const typeView = new this(new ArrayBuffer(this.viewLength));\n    this.encode(value, typeView, 0);\n    return typeView;\n  }\n\n  static getLength(): number {\n    return this.viewLength;\n  }\n\n  get(): bigint {\n    return (this.constructor as typeof BigInt64View).decode(this);\n  }\n\n  set(value: bigint): this {\n    (this.constructor as typeof BigInt64View).encode(value, this);\n    return this;\n  }\n\n  toJSON(): bigint {\n    // todo fix bigint is not serializable in JSON\n    return (this.constructor as typeof BigInt64View).decode(this);\n  }\n\n  static initialize(): ViewConstructor<bigint, PrimitiveView<bigint>> {\n    return this;\n  }\n}\n\nexport class BigUint64View extends BigInt64View {\n  static viewLength = 8;\n  static decode(view: DataView, start = 0): bigint {\n    return DataView.prototype.getBigUint64.call(view, start, true);\n  }\n  static encode(value: bigint, view: DataView, start = 0): number {\n    DataView.prototype.setBigUint64.call(view, start, value, true);\n    return this.viewLength;\n  }\n}\n"]}