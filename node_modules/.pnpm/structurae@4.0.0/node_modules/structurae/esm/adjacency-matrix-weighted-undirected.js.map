{"version":3,"file":"adjacency-matrix-weighted-undirected.js","sourceRoot":"","sources":["../src/adjacency-matrix-weighted-undirected.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,oCAAoC,EAAE,MAAM,yCAAyC,CAAC;AAE/F;;;;GAIG;AACH,MAAM,UAAU,sCAAsC,CAEpD,IAAO;IACP;;OAEG;IACH,MAAM,iCACJ,SAAQ,oCAAoC,CAAC,IAAI,CAAC;QAGlD,MAAM,CAAC,SAAS,CAAC,QAAgB,EAAE,CAAU;YAC3C,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;QAES,MAAM,CAAC,WAAW,CAAC,MAAc;YACzC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC;QAED,QAAQ,CAAC,CAAS,EAAE,CAAS;YAC3B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,CAAC;QAED,QAAQ,CAAC,MAAc;YACrB,yBAAyB;YACzB,OAAQ,IAAsC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjE,CAAC;;IAjBM;;;;eAAW,KAAK;OAAC;IAoB1B,yBAAyB;IACzB,OAAO,iCAEN,CAAC;AACJ,CAAC","sourcesContent":["import type {\n  AdjacencyStructure,\n  AdjacencyStructureConstructor,\n  TypedArrayConstructors,\n} from \"./utility-types.js\";\nimport { AdjacencyMatrixWeightedDirectedMixin } from \"./adjacency-matrix-weighted-directed.js\";\n\n/**\n * Creates an Adjacency Matrix class extending a given TypedArray class.\n *\n * @param Base a TypedArray class to extend\n */\nexport function AdjacencyMatrixWeightedUndirectedMixin<\n  U extends TypedArrayConstructors,\n>(Base: U): AdjacencyStructureConstructor<U> {\n  /**\n   * Implements the Adjacency Matrix for weighted undirected graphs.\n   */\n  class AdjacencyMatrixWeightedUndirected\n    extends AdjacencyMatrixWeightedDirectedMixin(Base) {\n    static directed = false;\n\n    static getLength(vertices: number, _?: number): number {\n      return ((vertices + 1) * vertices) >> 1;\n    }\n\n    protected static getVertices(length: number): number {\n      return (Math.sqrt((length << 3) + 1) - 1) >> 1;\n    }\n\n    getIndex(x: number, y: number): number {\n      return x >= y ? y + (((x + 1) * x) >> 1) : x + (((y + 1) * y) >> 1);\n    }\n\n    outEdges(vertex: number) {\n      // TODO: fix type casting\n      return (this as unknown as AdjacencyStructure).inEdges(vertex);\n    }\n  }\n\n  // TODO: fix type casting\n  return AdjacencyMatrixWeightedUndirected as unknown as AdjacencyStructureConstructor<\n    U\n  >;\n}\n"]}