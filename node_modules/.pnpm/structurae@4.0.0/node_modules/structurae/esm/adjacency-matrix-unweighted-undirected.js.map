{"version":3,"file":"adjacency-matrix-unweighted-undirected.js","sourceRoot":"","sources":["../src/adjacency-matrix-unweighted-undirected.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iCAAiC,EAAE,MAAM,2CAA2C,CAAC;AAE9F;;GAEG;AACH,MAAM,OAAO,mCACX,SAAQ,iCAAiC;IAEzC,MAAM,CAAC,SAAS,CAAC,QAAgB;QAC/B,OAAO,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IACD,QAAQ,CAAC,CAAS,EAAE,CAAS;QAC3B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE,CAAC;;AANM;;;;WAAW,KAAK;GAAC","sourcesContent":["import { AdjacencyMatrixUnweightedDirected } from \"./adjacency-matrix-unweighted-directed.js\";\n\n/**\n * Implements the Adjacency Matrix data structure for unweighted undirected graphs.\n */\nexport class AdjacencyMatrixUnweightedUndirected\n  extends AdjacencyMatrixUnweightedDirected {\n  static directed = false;\n  static getLength(vertices: number): number {\n    return (((vertices + 1) * vertices) >> 6) + 2;\n  }\n  getIndex(x: number, y: number): number {\n    return x >= y ? y + (((x + 1) * x) >> 1) : x + (((y + 1) * y) >> 1);\n  }\n}\n"]}