{"version":3,"file":"utilities.js","sourceRoot":"","sources":["../src/utilities.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Lookup table for powers of 2\n */\nexport const log2: Record<number, number> = {\n  1: 0,\n  2: 1,\n  4: 2,\n  8: 3,\n  16: 4,\n  32: 5,\n  64: 6,\n  128: 7,\n  256: 8,\n  512: 9,\n  1024: 10,\n  2048: 11,\n  4096: 12,\n  8192: 13,\n  16384: 14,\n  32768: 15,\n  65536: 16,\n  131072: 17,\n  262144: 18,\n  524288: 19,\n  1048576: 20,\n  2097152: 21,\n  4194304: 22,\n  8388608: 23,\n  16777216: 24,\n  33554432: 25,\n  67108864: 26,\n  134217728: 27,\n  268435456: 28,\n  536870912: 29,\n  1073741824: 30,\n  2147483648: 31,\n};\n\n/**\n * Counts set bits in a given number.\n *\n * @param value the number\n * @return the amount of set bits\n */\nexport function popCount32(value: number): number {\n  const a = value - ((value >> 1) & 0x55555555);\n  const b = (a & 0x33333333) + ((a >> 2) & 0x33333333);\n  return (((b + (b >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\n\n/**\n * Returns the index of the Least Significant Bit in a number.\n *\n * @param value the number\n * @return the index of LSB\n */\nexport function getLSBIndex(value: number): number {\n  if (value === 2147483648) return 31;\n  return log2[value & -value];\n}\n\n/**\n * Returns the minimum amount of bits necessary to hold a given number.\n *\n * @param number the number\n * @return the amount of bits necessary\n */\nexport function getBitSize(number: number): number {\n  if (number < 281474976710656) return (Math.log2(number) | 0) + 1;\n  const n = BigInt(number);\n  const [zero, one, two] = [BigInt(0), BigInt(1), BigInt(2)];\n  let high = BigInt(53);\n  let low = BigInt(48);\n\n  while (high - low > one) {\n    const mid = (high + low) / two;\n    const maskHigh = (one << high) - (one << mid);\n    if ((maskHigh & n) > zero) {\n      low = mid;\n    } else {\n      high = mid;\n    }\n  }\n  return Number(low + one);\n}\n\nexport function getLog2(value: number): number {\n  return Math.ceil(Math.log2(value));\n}\n"]}