{"version":3,"file":"boolean-view.js","sourceRoot":"","sources":["../src/boolean-view.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,WAAY,SAAQ,QAAQ;IAGvC,MAAM,CAAC,MAAM,CAAC,IAAc,EAAE,KAAK,GAAG,CAAC;QACrC,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,KAAc,EAAE,IAAc,EAAE,KAAK,GAAG,CAAC;QACrD,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,KAAc;QACxB,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;QAChC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,SAAS;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,GAAG;QACD,OAAQ,IAAI,CAAC,WAAkC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,GAAG,CAAC,KAAc;QACf,IAAI,CAAC,WAAkC,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,OAAQ,IAAI,CAAC,WAAkC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,MAAM,CAAC,UAAU;QACf,OAAO,IAAI,CAAC;IACd,CAAC;;AApCM;;;;WAAa,CAAC;GAAC","sourcesContent":["import type { PrimitiveView, ViewConstructor } from \"./view-types.js\";\n\nexport class BooleanView extends DataView implements PrimitiveView<boolean> {\n  static viewLength = 1;\n\n  static decode(view: DataView, start = 0): boolean {\n    return !!DataView.prototype.getUint8.call(view, start);\n  }\n\n  static encode(value: boolean, view: DataView, start = 0): number {\n    DataView.prototype.setUint8.call(view, start, +value);\n    return this.viewLength;\n  }\n\n  static from(value: boolean) {\n    const typeView = new this(new ArrayBuffer(this.viewLength));\n    this.encode(value, typeView, 0);\n    return typeView;\n  }\n\n  static getLength(): number {\n    return this.viewLength;\n  }\n\n  get(): boolean {\n    return (this.constructor as typeof BooleanView).decode(this);\n  }\n\n  set(value: boolean): this {\n    (this.constructor as typeof BooleanView).encode(value, this);\n    return this;\n  }\n\n  toJSON(): boolean {\n    return (this.constructor as typeof BooleanView).decode(this);\n  }\n\n  static initialize(): ViewConstructor<boolean, PrimitiveView<boolean>> {\n    return this;\n  }\n}\n"]}