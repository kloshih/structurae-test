{"version":3,"file":"adjacency-matrix-unweighted-directed.js","sourceRoot":"","sources":["../src/adjacency-matrix-unweighted-directed.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC;;GAEG;AACH,MAAM,OAAO,iCAAkC,SAAQ,WAAW;IAAlE;;QAIE;;;;mBAAQ,CAAC;WAAC;QAMV;;;;mBAAQ,CAAC;WAAC;IAoFZ,CAAC;IAxFC,MAAM,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;QACzB,OAAO,WAAW,CAAC;IACrB,CAAC;IAID,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,QAAQ,CAAC,KAAa;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,MAAM,CAEF,QAAgB;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxC,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,OAAO,MAAyB,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,QAAgB;QAC/B,OAAO,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACpD,CAAC;IAED,OAAO,CAAC,CAAS,EAAE,CAAS;QAC1B,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAAE,OAAO,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc,CAAC,CAAS,EAAE,CAAC,GAAG,CAAC;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,MAAM,GAAG,KAAK,IAAI,CAAC,CAAC;QAC1B,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,OAAO,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,OAAO,CAAC,CAAS,EAAE,CAAS;QAC1B,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAAE,OAAO,CAAC,CAAC;QACnC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAQ,CAAC;IACjD,CAAC;IAED,QAAQ,CAAC,CAAS,EAAE,CAAS;QAC3B,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO,CAAC,CAAS,EAAE,CAAS;QAC1B,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,CAAC,OAAO,CAAC,MAAc;QACrB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC;gBAAE,MAAM,CAAC,CAAC;SACtC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,KAAK,CAAC;IACf,CAAC;IAED,CAAC,QAAQ,CAAC,MAAc;QACtB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;gBAAE,MAAM,CAAC,CAAC;SACtC;IACH,CAAC;IAED,UAAU,CAAC,CAAS,EAAE,CAAS;QAC7B,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrD,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAAE,OAAO,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC;IACd,CAAC;;AA3FM;;;;WAAW,IAAI;GAAC;AAChB;;;;WAAW,KAAK;GAAC","sourcesContent":["import type {\n  AdjacencyStructure,\n  AdjacencyStructureConstructor,\n  Bit,\n  TypedArrayConstructors,\n} from \"./utility-types.js\";\nimport { getLog2 } from \"./utilities.js\";\n\n/**\n * Implements the Adjacency Matrix structure for unweighted directed graphs.\n */\nexport class AdjacencyMatrixUnweightedDirected extends Uint32Array\n  implements AdjacencyStructure {\n  static directed = true;\n  static weighted = false;\n  empty = 0;\n\n  static get [Symbol.species](): Uint32ArrayConstructor {\n    return Uint32Array;\n  }\n\n  _size = 0;\n\n  get size() {\n    return this._size || ((this._size = getLog2(this.vertices)), this._size);\n  }\n\n  get vertices() {\n    return this[this.length - 1];\n  }\n\n  set vertices(value: number) {\n    this[this.length - 1] = value;\n    this._size = getLog2(value);\n  }\n\n  get edges() {\n    return this.vertices ** 2;\n  }\n\n  static create<\n    T extends AdjacencyStructureConstructor<TypedArrayConstructors>,\n  >(this: T, vertices: number): InstanceType<T> {\n    const length = this.getLength(vertices);\n    const matrix = new this(length);\n    matrix.vertices = vertices;\n    return matrix as InstanceType<T>;\n  }\n\n  static getLength(vertices: number) {\n    return ((vertices << getLog2(vertices)) >> 5) + 2;\n  }\n\n  addEdge(x: number, y: number): this {\n    const [bucket, position] = this.getCoordinates(x, y);\n    if (Number.isNaN(bucket)) return this;\n    this[bucket] = (this[bucket] & ~(1 << position)) | (1 << position);\n    return this;\n  }\n\n  getCoordinates(x: number, y = 1): [bucket: number, position: number] {\n    const index = this.getIndex(x, y);\n    const bucket = index >> 5;\n    if (bucket >= this.length - 1) return [NaN, NaN];\n    return [bucket, index - (bucket << 5)];\n  }\n\n  getEdge(x: number, y: number): number {\n    const [bucket, position] = this.getCoordinates(x, y);\n    if (Number.isNaN(bucket)) return 0;\n    return ((this[bucket] >> position) & 1) as Bit;\n  }\n\n  getIndex(x: number, y: number): number {\n    return (x << this.size) + y;\n  }\n\n  hasEdge(x: number, y: number): boolean {\n    return !!this.getEdge(x, y);\n  }\n\n  *inEdges(vertex: number) {\n    const { vertices } = this;\n    for (let i = 0; i < vertices; i++) {\n      if (this.getEdge(i, vertex)) yield i;\n    }\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  *outEdges(vertex: number) {\n    const { vertices } = this;\n    for (let i = 0; i < vertices; i++) {\n      if (this.getEdge(vertex, i)) yield i;\n    }\n  }\n\n  removeEdge(x: number, y: number): this {\n    const [bucket, position] = this.getCoordinates(x, y);\n    if (Number.isNaN(bucket)) return this;\n    this[bucket] = this[bucket] & ~(1 << position);\n    return this;\n  }\n}\n"]}